#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESCAPE  &kp Q        &kp W       &kp E        &kp R        &kp T                         &kp UP                &kp Y  &kp U        &kp I        &kp O       &kp P                &kp BSPC
&kp TAB     &mt LMETA A  &mt LALT S  &mt LSHFT D  &mt LCTRL F  &kp G               &kp LEFT  &kp ENTER  &kp RIGHT  &kp H  &mt RCTRL J  &mt RSHFT K  &mt LALT L  &mt RMETA SEMICOLON  &kp SQT
&kp CLCK    &kp Z        &kp X       &kp C        &kp V        &kp B  &kp SPACE              &kp DOWN              &kp N  &kp M        &kp COMMA    &kp DOT     &kp FSLH             &kp GRAVE
                                     &kp LGUI     &lt 4 ENTER  &mo 1                                               &mo 2  &lt 3 SPACE  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1           &kp N2          &kp N3        &kp N4        &kp N5                                         &mmv MOVE_UP                     &kp N6           &kp N7           &kp N8           &kp N9           &kp N0    &kp BSPC
&trans  &trans           &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp HOME  &kp PG_UP
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans        &trans        &rgb_ug RGB_EFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp END   &kp PG_DN
                                         &trans        &trans        &trans                                                                          &kp INS          &kp DEL          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL  &kp AT      &kp HASH              &kp DLLR               &kp PRCNT                            &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK       &kp LPAR         &kp RPAR       &kp BSPC
&trans  &kp HASH  &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp PIPE       &kp GRAVE
&trans  &trans    &trans      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp MINUS  &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC        &kp RBRC         &kp BACKSLASH  &kp TILDE
                              &trans                &trans                 &kp SPACE                                                             &kp RET    &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1  &kp F2     &kp F3     &kp F4     &kp F5                                  &mmv MOVE_UP                     &kp F6       &kp F7          &kp F8          &kp F9           &kp F10          &kp F11
&trans          &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mmv MOVE_LEFT  &mmv MOVE_UP    &mmv MOVE_RIGHT  &kp PRINTSCREEN  &kp F12
&trans          &trans  &trans     &trans     &trans     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans       &trans          &mmv MOVE_DOWN  &trans           &kp SCROLLLOCK   &kp PAUSE_BREAK
                                   &trans     &trans     &trans                                                                   &trans       &trans          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_4 {
            bindings = <
&bt BT_CLR_ALL  &trans  &trans          &trans          &sys_reset       &trans                         &trans          &trans  &mkp LCLK       &mkp MCLK       &mkp RCLK        &mkp MB4  &trans
&trans          &trans  &msc SCRL_LEFT  &msc SCRL_UP    &msc SCRL_RIGHT  &trans                 &trans  &trans  &trans  &trans  &mmv MOVE_LEFT  &mmv MOVE_UP    &mmv MOVE_RIGHT  &mkp MB5  &trans
&trans          &trans  &trans          &msc SCRL_DOWN  &trans           &bootloader  &trans            &trans          &trans  &trans          &mmv MOVE_DOWN  &trans           &trans    &trans
                                        &trans          &trans           &trans                                         &trans  &trans          &trans
            >;
        };
    };
};
