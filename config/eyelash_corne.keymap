#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    macros {
        smaller_equal: smaller_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp EQUAL>;
            label = "SMALLER_EQUAL";
        };

        greater_equal: greater_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GT &kp EQUAL>;
            label = "GREATER_EQUAL";
        };

        not_equal: not_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EXCL &kp EQUAL>;
            label = "NOT_EQUAL";
        };

        right_pointer: right_pointer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "RIGHT_POINTER";
        };

        left_pointer: left_pointer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp MINUS>;
            label = "LEFT_POINTER";
        };

        slash_star: slash_star {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp FSLH &kp STAR>;
            label = "SLASH_STAR";
        };

        equal_greater: equal_greater {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GREATER_THAN>;
            label = "EQUAL_GREATER";
        };

        plus_equal: plus_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PLUS &kp EQUAL>;
            label = "PLUS_EQUAL";
        };

        anon_array: anon_array {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp UNDER &kp RIGHT_BRACKET>;
            label = "ANON_ARRAY";
        };

        deref_pointer: deref_pointer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp STAR>;
            label = "DEREF_POINTER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESCAPE     &kp Q  &kp W  &kp E            &kp R        &kp T                                  &kp UP                &kp Y        &kp U        &kp I      &kp O    &kp P          &kp BSPC
&mt LCTRL TAB  &kp A  &kp S  &kp D            &kp F        &kp G                        &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp J        &kp K      &kp L    &kp SEMICOLON  &mt RCTRL SQT
&td0           &kp Z  &kp X  &kp C            &kp V        &kp B           &kp SPACE              &kp DOWN              &kp N        &kp M        &kp COMMA  &kp DOT  &kp FSLH       &mt RSHFT GRAVE
                             &mt LGUI ESCAPE  &lt 3 ENTER  &mt LALT SPACE                                               &lt 1 ENTER  &lt 2 SPACE  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans     &kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3    &kp NUMBER_4     &kp N5                                  &mmv MOVE_UP                     &kp NUMBER_6  &kp N7    &kp N8    &kp N9  &kp N0     &kp BSPC
&kp LCTRL  &msc SCRL_LEFT  &msc SCRL_UP  &msc SCRL_DOWN  &msc SCRL_RIGHT  &none                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp PG_UP     &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp RCTRL
&kp LSHFT  &none           &mkp LCLK     &mkp MCLK       &mkp RCLK        &none     &kp C_MUTE                    &mmv MOVE_DOWN                   &kp PG_DN     &kp HOME  &kp END   &none   &none      &kp RSHFT
                                         &kp LGUI        &trans           &kp LALT                                                                 &none         &trans    &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp GRAVE  &kp EXCL        &kp AT          &kp HASH              &kp DOLLAR             &kp PRCNT                                &mmv MOVE_UP                     &kp CARET  &kp AMPERSAND   &kp ASTERISK     &plus_equal     &equal_greater  &kp BSPC
&kp CARET  &left_pointer   &right_pointer  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp EQUAL  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp PIPE        &kp TILDE       &kp RCTRL
&kp LSHFT  &deref_pointer  &slash_star     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp MINUS      &trans                    &mmv MOVE_DOWN                   &kp UNDER  &not_equal      &smaller_equal   &greater_equal  &anon_array     &kp RSHFT
                                           &kp LGUI              &trans                 &kp LALT                                                                  &trans     &trans          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 4     &bt BT_SEL 3     &bt BT_SEL 2     &bt BT_SEL 1     &bt BT_SEL 0                                   &mmv MOVE_UP                     &kp PRINTSCREEN  &kp F7  &kp F8        &kp F9  &kp F10  &kp F12
&kp LCTRL       &rgb_ug RGB_EFR  &rgb_ug RGB_OFF  &rgb_ug RGB_ON   &rgb_ug RGB_EFF  &rgb_ug RGB_SPI                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp SCROLLLOCK   &kp F4  &kp F5        &kp F6  &kp F11  &kp RCTRL
&kp LSHFT       &sys_reset       &bootloader      &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SPD  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp PAUSE_BREAK  &kp F1  &kp F2        &kp F3  &none    &kp RSHFT
                                                  &trans           &trans           &trans                                                                          &kp LGUI         &trans  &kp LEFT_ALT
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
